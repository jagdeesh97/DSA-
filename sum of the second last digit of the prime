import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
    public static boolean isPrime(int n){
        if(n <= 1) return false;
        for(int i=2; i*i<=n; i++){
            if(n%i == 0){
                return false;
            }
        }
        return true;
    }
    public static void findPrimes(int l, int r){
        int sum = 0;
        for(int i=l; i<=r; i++){
            if(isPrime(i)){
                int secondLast  = (i / 10) % 10;
                sum = sum + secondLast;
            }
        }
        System.out.println(sum);
    }
    public static void main (String[] args) {
        // Your code here
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while(t-->0){
            int l = sc.nextInt();
            int r = sc.nextInt();

            findPrimes(l,r);
        }
    }
}
// 2 3 5 7 11 13 17 19

//=========================== Problem Statement ===============================================================
Problem Statement
Given a range from l to r, Your task is to find the sum of the second last digit of the prime numbers between that range.
Input
The first line of the input contains the T test cases.
Next T lines contains the range value l and r.

Constraints
1 <= T <= 100
1 <= l < r <= 1e5
Difference between l and r dosen't exceed 1e4.
Output
Print the required sum.
Example
Sample Input 1:
3
2 15
1 20
3 10

Sample Output 1:
2
4
0
